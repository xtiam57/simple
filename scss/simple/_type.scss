// color variants
@mixin bg-variant($parent, $bg-color, $color) {
  #{$parent} {
    background-color: $bg-color;
    color: $color;
  }
  a#{$parent}:hover {
    background-color: darken($bg-color, 10%);
    @if ($color != inherit) {
      color: darken($color, 10%);
    }
  }
}

@mixin color-variant($parent, $color) {
  #{$parent} {
    color: $color !important;
  }
  a#{$parent}:hover {
    color: darken($color, 10%) !important;
  }
}

/* Typography resets */
div,
dl,
dt,
dd,
ul,
ol,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
form,
p,
blockquote,
th,
td {
  margin:0;
  padding:0;
  position: relative;
}

a {
  color: $anchor-font-color;
  text-decoration: $anchor-text-decoration;
  line-height: inherit;

  &:hover,
  &:focus {
    color: $anchor-font-color-hover;
    @if $anchor-text-decoration-hover != $anchor-text-decoration {
      text-decoration: $anchor-text-decoration-hover;
    }
  }

  img { border:none; }
}

h1, h2, h3, h4, h5, h6 {
  font-family: $header-font-family;
  font-weight: $header-font-weight;
  font-style: $header-font-style;
  color: $header-font-color;
  text-rendering: $header-text-rendering;
  margin-top: $header-top-margin;
  margin-bottom: $header-bottom-margin;
  line-height: $header-line-height;
  word-wrap: $header-word-wrap;

  small {
    font-size: $small-font-size;
    color: $small-font-color;
    line-height: 0;
  }

  &.subheader {
    line-height: $subheader-line-height;
    color: $subheader-font-color;
    font-weight: $subheader-font-weight;
    margin-top: $subheader-top-margin;
    margin-bottom: $subheader-bottom-margin;
  }

  &.xlarge-header { @include rem(font-size, $xlarge-font-size); }
  &.xxlarge-header { @include rem(font-size, $xxlarge-font-size); }
}

h1 { @include rem(font-size, $h1-font-size); }
h2 { @include rem(font-size, $h2-font-size); }
h3 { @include rem(font-size, $h3-font-size); }
h4 { @include rem(font-size, $h4-font-size); }
h5 { @include rem(font-size, $h5-font-size); }
h6 { @include rem(font-size, $h6-font-size); }


p {
  font-family: $paragraph-font-family;
  font-weight: $paragraph-font-weight;
  font-size: $paragraph-font-size;
  line-height: $paragraph-line-height;
  margin-bottom: $paragraph-margin-bottom;
  text-rendering: $paragraph-text-rendering;

  &.lead {
    @include rem(font-size, $paragraph-font-size * ($lead-scale / 100%));
    line-height: $lead-line-height;
  }
}

// Background colors
@include bg-variant('.background-primary', $primary-color, $primary-contrast-color);
@include bg-variant('.background-default', $default-color, $default-contrast-color);
@include bg-variant('.background-info', $info-color, $info-contrast-color);
@include bg-variant('.background-danger', $danger-color, $danger-contrast-color);
@include bg-variant('.background-warning', $warning-color, $warning-contrast-color);
@include bg-variant('.background-success', $success-color, $success-contrast-color);
@include bg-variant('.background-dark', $dark-color, $dark-contrast-color);
@include bg-variant('.background-white', #fff, inherit);

// Text color variant
@include color-variant('.text-primary', $primary-color);
@include color-variant('.text-default', $default-color);
@include color-variant('.text-info', $info-color);
@include color-variant('.text-danger', $danger-color);
@include color-variant('.text-warning', $warning-color);
@include color-variant('.text-success', $success-color);
@include color-variant('.text-dark', $dark-color);
@include color-variant('.text-white', #fff);

// Generates text align and justify classes
.text-left    { text-align: left !important; }
.text-right   { text-align: right !important; }
.text-center  { text-align: center !important; }
.text-justify { text-align: justify !important; }

hr {
  border: $hr-border-style $hr-border-color;
  border-width: $hr-border-width 0 0;
  clear: both;
  @include rem(margin, ($hr-margin - $hr-border-width * 0.5) 0);
  height: 0;
}

/* Helpful Typography Defaults */
em,
i {
  font-style: italic;
  line-height: inherit;
}

strong,
b,
.text-bold,
.text-strong {
  font-weight: bold;
  line-height: inherit;
}

small {
  font-size: $small-font-size;
  line-height: inherit;
}

code {
  font-family: $code-font-family;
  font-weight: $code-font-weight;
  color: $code-color;
  padding: 2px 4px;
  font-size: 90%;
  background-color: $code-bg;
}

// Blocks of code
pre {
  font-family: $pre-font-family;
  font-weight: $pre-font-weight;
  color: $pre-color;
  display: $pre-display;
  padding: $pre-padding;
  margin: 0 0 $pre-margin-bottom;
  line-height: $pre-line-height;
  word-break: break-all;
  word-wrap: break-word;
  background-color: $pre-bg;
  border: 1px solid $pre-border-color;

  // Account for some code outputs that place code tags in pre tags
  code {
    white-space: pre-wrap;
  }
}

/* Lists */
ul,
ol,
dl {
  font-size: $list-font-size;
  line-height: $list-line-height;
  margin-bottom: $list-margin-bottom;
  list-style-position: $list-style-position;
  font-family: $list-font-family;
}

ul {
  margin-#{$default-float}: $list-side-margin;
  &.no-bullet {
    margin-#{$default-float}: $list-side-margin-no-bullet;
    li {
      ul,
      ol {
        @include rem(margin-#{$default-float}, $list-nested-margin);
        margin-bottom: 0;
        list-style: none;
      }
    }
  }
}

/* Unordered Lists */
ul {
  li {
    ul,
    ol {
      @include rem(margin-#{$default-float}, $list-nested-margin);
      margin-bottom: 0;
    }
  }
  &.square,
  &.circle,
  &.disc {
    li ul { list-style: inherit; }
  }

  &.square { list-style-type: square; margin-#{$default-float}: $list-side-margin;}
  &.circle { list-style-type: circle; margin-#{$default-float}: $list-side-margin;}
  &.disc { list-style-type: disc; margin-#{$default-float}: $list-side-margin;}
  &.no-bullet { list-style: none; }
}

/* Ordered Lists */
ol {
  margin-#{$default-float}: $list-ordered-side-margin;
  li {
    ul,
    ol {
      @include rem(margin-#{$default-float}, $list-nested-margin);
      margin-bottom: 0;
    }
  }
}

/* Inline list */
ul,
ol {
  &.inline-list {
    @include rem(margin, $inline-list-top-margin auto $inline-list-bottom-margin auto);
    @include rem(margin-#{$default-float}, $inline-list-default-float-margin);
    margin-#{$opposite-direction}: $inline-list-opposite-margin;
    padding: $inline-list-padding;
    list-style: none;
    overflow: $inline-list-overflow;

    & > li {
      padding: $inline-list-children-padding;
      list-style: none;
      float: $default-float;
      @include rem(margin-#{$default-float}, $inline-list-default-float-list-margin);
      display: $inline-list-display;
      &>* { display: $inline-list-children-display; }
    }
  }
}

/* Definition Lists */
dl {
  dt {
    margin-bottom: $definition-list-header-margin-bottom;
    font-weight: $definition-list-header-weight;
  }
  dd { @include rem(margin-bottom, $definition-list-margin-bottom); }
}

/* Abbreviations */
abbr,
acronym {
  text-transform: uppercase;
  font-size: 90%;
  color: $body-font-color;
  border-bottom: $acronym-underline;
  cursor: $cursor-help-value;
}
abbr {
  text-transform: none;
}

/* Blockquotes */
blockquote {
  margin: 0 0 $paragraph-margin-bottom;
  @include rem(padding, $blockquote-padding);
  border-#{$default-float}: $blockquote-border;

  cite {
    display: block;
    @include rem(font-size, $blockquote-cite-font-size);
    color: $blockquote-cite-font-color;
    &:before {
      content: "\2014 \0020";
    }

    a,
    a:visited {
      color: $blockquote-cite-link-color;
    }
  }

  &.right {
    border-#{$default-float}: none;
    border-#{$opposite-direction}: $blockquote-border;
    text-align: $opposite-direction;

    cite {
      text-align: $opposite-direction;
    }
  }
}
blockquote,
blockquote p {
  line-height: $paragraph-line-height;
  color: $blockquote-font-color;
}
