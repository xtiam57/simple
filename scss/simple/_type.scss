/* Typography resets */
div,
dl,
dt,
dd,
ul,
ol,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
form,
p,
blockquote,
th,
td {
  margin: 0;
  padding: 0;
  position: relative;
}

a {
  color: $anchor-font-color;
  text-decoration: $anchor-text-decoration;
  line-height: inherit;
  @include single-transition(color, .25s);

  &:hover,
  &:focus {
    color: $anchor-font-color-hover;
    @if $anchor-text-decoration-hover != $anchor-text-decoration {
      text-decoration: $anchor-text-decoration-hover;
    }
  }

  img { border:none; }
}

h1, h2, h3, h4, h5, h6 {
  font-family: $header-font-family;
  font-weight: $header-font-weight;
  font-style: $header-font-style;
  color: $header-font-color;
  text-rendering: $header-text-rendering;
  @include rem(margin-top, $header-top-margin);
  @include rem(margin-bottom, $header-bottom-margin);
  line-height: $header-line-height;
  word-wrap: $header-word-wrap;

  small {
    font-size: $small-font-size;
    color: $small-font-color;
    line-height: 0;
  }

  &.subheader {
    line-height: $subheader-line-height;
    color: $subheader-font-color;
    font-weight: $subheader-font-weight;
    @include rem(margin-top, $subheader-top-margin);
    @include rem(margin-bottom, $subheader-bottom-margin);
  }

  &.xlarge-header {
    @include rem(font-size, $xlarge-font-size);
    letter-spacing: $xlarge-letter-spacing;
  }

  &.xxlarge-header {
    @include rem(font-size, $xxlarge-font-size);
    letter-spacing: $xxlarge-letter-spacing;
  }
}

h1 { @include rem(font-size, $h1-font-size); letter-spacing: $h1-letter-spacing; }
h2 { @include rem(font-size, $h2-font-size); letter-spacing: $h2-letter-spacing; }
h3 { @include rem(font-size, $h3-font-size); letter-spacing: $h3-letter-spacing; }
h4 { @include rem(font-size, $h4-font-size); letter-spacing: $h4-letter-spacing; }
h5 { @include rem(font-size, $h5-font-size); letter-spacing: $h5-letter-spacing; }
h6 { @include rem(font-size, $h6-font-size); letter-spacing: $h6-letter-spacing; }

p {
  font-family: $paragraph-font-family;
  font-weight: $paragraph-font-weight;
  @include rem(font-size, $paragraph-font-size);
  line-height: $paragraph-line-height;
  @include rem(margin-bottom, $paragraph-margin-bottom);
  text-rendering: $paragraph-text-rendering;
  color: $paragraph-font-color;

  &.lead {
    @include rem(font-size, $paragraph-font-size * ($lead-scale / 100%));
    line-height: $lead-line-height;
    color: $lead-font-color;
  }
}

// Generates text align and justify classes
.text-left { text-align: left !important; }
.text-right { text-align: right !important; }
.text-center { text-align: center !important; }
.text-justify { text-align: justify !important; }

hr {
  border: $hr-border-style $hr-border-color;
  border-width: $hr-border-width 0 0;
  clear: both;
  @include rem(margin, ($hr-margin - $hr-border-width * 0.5) 0);
  height: 0;
}

/* Helpful Typography Defaults */
em,
i {
  font-style: italic;
  line-height: inherit;
}

strong,
b,
.text-bold,
.text-strong {
  font-weight: bold;
  line-height: inherit;
}

small {
  font-size: $small-font-size;
  line-height: inherit;
}

code {
  font-family: $code-font-family;
  font-weight: $code-font-weight;
  color: $code-color;
  @include rem(padding, $code-padding);
  @include rem(font-size, $base-font-size);
  background-color: $code-bg;
}

// Blocks of code
pre {
  font-family: $pre-font-family;
  font-weight: $pre-font-weight;
  color: $pre-color;
  display: $pre-display;
  @include rem(padding, $pre-padding);
  @include rem(margin, 0 0 $pre-margin-bottom);
  line-height: $pre-line-height;
  word-break: break-all;
  word-wrap: break-word;
  background-color: $pre-bg;
  border: 1px solid $pre-border-color;

  // Account for some code outputs that place code tags in pre tags
  code {
    white-space: pre-wrap;
  }
}

/* Lists */
ul,
ol,
dl {
  @include rem(font-size, $list-font-size);
  line-height: $list-line-height;
  @include rem(margin-bottom, $list-margin-bottom);
  list-style-position: $list-style-position;
  font-family: $list-font-family;
}

ul {
  @include rem(margin-#{$default-float}, $list-side-margin);
  &.no-bullet {
    @include rem(margin-#{$default-float}, $list-side-margin-no-bullet);
    li {
      ul,
      ol {
        @include rem(margin-#{$default-float}, $list-nested-margin);
        margin-bottom: 0;
        list-style: none;
      }
    }
  }
}

/* Unordered Lists */
ul {
  li {
    ul,
    ol {
      @include rem(margin-#{$default-float}, $list-nested-margin);
      margin-bottom: 0;
    }
  }
  &.square,
  &.circle,
  &.disc {
    li ul { list-style: inherit; }
  }

  &.square { list-style-type: square; @include rem(margin-#{$default-float}, $list-side-margin); }
  &.circle { list-style-type: circle; @include rem(margin-#{$default-float}, $list-side-margin); }
  &.disc { list-style-type: disc; @include rem(margin-#{$default-float}, $list-side-margin); }
  &.no-bullet { list-style: none; }
}

/* Ordered Lists */
ol {
  @include rem(margin-#{$default-float}, $list-ordered-side-margin);
  li {
    ul,
    ol {
      @include rem(margin-#{$default-float}, $list-nested-margin);
      margin-bottom: 0;
    }
  }
}

/* Inline list */
ul,
ol {
  &.inline-list {
    @include rem(margin, $inline-list-top-margin auto $inline-list-bottom-margin auto);
    @include rem(margin-#{$default-float}, $inline-list-default-float-margin);
    @include rem(margin-#{$opposite-direction}, $inline-list-opposite-margin);
    @include rem(padding, $inline-list-padding);
    list-style: none;
    overflow: $inline-list-overflow;

    & > li {
      @include rem(padding, $inline-list-children-padding);
      list-style: none;
      float: $default-float;
      @include rem(margin-#{$default-float}, $inline-list-default-float-list-margin);
      display: $inline-list-display;
      &>* { display: $inline-list-children-display; }
    }
  }
}

/* Definition Lists */
dl {
  dt {
    @include rem(margin-bottom, $definition-list-header-margin-bottom);
    font-weight: $definition-list-header-weight;
  }
  dd { @include rem(margin-bottom, $definition-list-margin-bottom); }
}

/* Abbreviations */
abbr,
acronym {
  text-transform: uppercase;
  font-size: $acronym-font-size;
  color: $body-font-color;
  border-bottom: $acronym-underline;
  cursor: $cursor-help-value;
}
abbr {
  text-transform: none;
}

/* Blockquotes */
blockquote {
  @include rem(margin, 0 0 $paragraph-margin-bottom);
  @include rem(padding, $blockquote-padding);
  border-#{$default-float}: $blockquote-border;

  cite {
    display: block;
    @include rem(font-size, $blockquote-cite-font-size);
    color: $blockquote-cite-font-color;
    &:before {
      content: "\2014 \0020";
    }

    a,
    a:visited {
      color: $blockquote-cite-link-color;
    }
  }

  &.right {
    border-#{$default-float}: none;
    border-#{$opposite-direction}: $blockquote-border;
    text-align: $opposite-direction;

    cite {
      text-align: $opposite-direction;
    }
  }
}
blockquote,
blockquote p {
  line-height: $paragraph-line-height;
  color: $blockquote-font-color;
}

// Background colors
.bg-primary { @include bg-variant($primary-color); }
.bg-secundary { @include bg-variant($secundary-color); }
.bg-default { @include bg-variant($default-color); }
.bg-info { @include bg-variant($info-color); }
.bg-danger { @include bg-variant($danger-color); }
.bg-warning { @include bg-variant($warning-color); }
.bg-success { @include bg-variant($success-color); }
.bg-white { @include bg-variant(#fff); }

// // Text color variant
.text-primary { @include color-variant($primary-color); }
.text-secundary { @include color-variant($secundary-color); }
.text-default { @include color-variant($default-color); }
.text-info { @include color-variant($info-color); }
.text-danger { @include color-variant($danger-color); }
.text-warning { @include color-variant($warning-color); }
.text-success { @include color-variant($success-color); }
.text-white { @include color-variant(#fff); }
